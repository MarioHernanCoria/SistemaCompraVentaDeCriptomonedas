// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaCompraVentaDeCriptomonedas.DataAccess;

#nullable disable

namespace SistemaCompraVentaDeCriptomonedas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cuentas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Cuenta");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.LogMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LogMovimientos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LogMovimiento");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<int>("MovimientaCuentaId")
                        .HasColumnType("int");

                    b.Property<int>("MovimientoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovimientaCuentaId");

                    b.HasIndex("MovimientoUsuarioId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.MovimientoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CuentaDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("CuentaOrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuentaDestinoId");

                    b.HasIndex("CuentaOrigenId");

                    b.ToTable("MovimientoCuentas");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.MovimientoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UsuarioDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioOrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDestinoId");

                    b.HasIndex("UsuarioOrigenId");

                    b.ToTable("MovimientoUsuarios");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "ADMINISTRADOR",
                            Tipo = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "CLIENTE",
                            Tipo = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "OPERADOR",
                            Tipo = 3,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Descripcion = "ANALISTA",
                            Tipo = 4,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Descripcion = "AUDITOR",
                            Tipo = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Descripcion = "USUARIO",
                            Tipo = 6,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Descripcion = "USUARIO",
                            Tipo = 6,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Descripcion = "USUARIO",
                            Tipo = 6,
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Coria",
                            Clave = "2191227b07660b208a127900f141134edcef520b5f2076f2c08884822e6cd610",
                            Dni = 42863574,
                            Email = "mariocoria@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Mario"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Apellido = "Coria",
                            Clave = "ab22d4230b674f95b0fdb601ec7cfc165ad11490114c41682fb13bcfcb5f2636",
                            Dni = 78627162,
                            Email = "aliciacoria@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(1969, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Alicia"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Apellido = "Gonzales",
                            Clave = "f69dd9625a97f42a972022a56cf296baa70cdeb6a6d19eb475350bc083a99cbd",
                            Dni = 60312412,
                            Email = "edwingonzales@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(1969, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Edwin"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Apellido = "Solana",
                            Clave = "b41ff9ad97f8d1a9a17487eeba8a3a4845f4b02463cb0cbd8cc149d9adb441cd",
                            Dni = 25364734,
                            Email = "sergiosolana@gmail.com",
                            EstadoCivil = 2,
                            FechaNacimiento = new DateTime(1950, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Sergio"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Apellido = "Silla",
                            Clave = "c8f12ee6cffd196bddb03c00c87de5b1fc84f6b03aded3037b23f37f491922ba",
                            Dni = 64392547,
                            Email = "marinasilla@gmail.com",
                            EstadoCivil = 4,
                            FechaNacimiento = new DateTime(1963, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Marina"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Apellido = "Vargas",
                            Clave = "1d3d8c6a59386ba8a3a2ba7e0ab06d1e42541b1ef885905c489339aeaba4e246",
                            Dni = 9743265,
                            Email = "claudiavargas@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(1962, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Claudia"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Apellido = "Vargas",
                            Clave = "7e766bfcf2162b5587726043554e15ed3958853dfa03f91131268a08b6e6c321",
                            Dni = 36598645,
                            Email = "raquelvargas@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(1939, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Raquel"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Apellido = "Coria",
                            Clave = "7a8eb7625e53f545e3400500bb2d4bdd2d9db24e8b9ce41572bda00e05062a48",
                            Dni = 25463548,
                            Email = "anacoria@gmail.com",
                            EstadoCivil = 2,
                            FechaNacimiento = new DateTime(1930, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Ana"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Apellido = "America",
                            Clave = "acb31f97873213ab27504303c6a0278f8a187b7895ac088096031cd5ce981ef9",
                            Dni = 26473645,
                            Email = "emiliaamerica@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(2000, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Emilia"
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            Apellido = "Corbalan",
                            Clave = "64c1f0da00856ac0e2d9f60bf54f10caa15cac59a5ac4365ff0c2a6b0ff2e6ee",
                            Dni = 36475635,
                            Email = "dariocorbalan@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(1980, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Dario"
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            Apellido = "Corbalan",
                            Clave = "ae652caeb88b69447bec6e50422ae0795294392a4e5a6a4c5df924ff0506d7e2",
                            Dni = 40265736,
                            Email = "fernandocorbalan@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(2003, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Fernando"
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            Apellido = "Solan",
                            Clave = "ab8ee9a8cf48414c7291b4f2f23b3a4b38e152988840636a4e61e981b03cb528",
                            Dni = 35465768,
                            Email = "briansolana@gmail.com",
                            EstadoCivil = 4,
                            FechaNacimiento = new DateTime(1990, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Brian"
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            Apellido = "Correa",
                            Clave = "1df36b93d671df537144691e815d748064278b968f5a5096fc8ca056bf74885e",
                            Dni = 24354623,
                            Email = "marianacorrea@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(1998, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Nombre = "Mariana"
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            Apellido = "Vargas",
                            Clave = "16f41ebf5bc518a46ca93700954646c161ea9316d4aa1cefaf388a90e79c0413",
                            Dni = 97869785,
                            Email = "pablovargas@gmail.com",
                            EstadoCivil = 1,
                            FechaNacimiento = new DateTime(2005, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 1,
                            Nombre = "Pablo"
                        });
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.CuentaCripto", b =>
                {
                    b.HasBaseType("SistemaCompraVentaDeCriptomonedas.Entities.Cuenta");

                    b.Property<string>("NombreCripto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CuentaCripto");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.CuentaFiduciaria", b =>
                {
                    b.HasBaseType("SistemaCompraVentaDeCriptomonedas.Entities.Cuenta");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CBU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CuentaFiduciaria");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.LogTransferencia", b =>
                {
                    b.HasBaseType("SistemaCompraVentaDeCriptomonedas.Entities.LogMovimiento");

                    b.Property<string>("EmailDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuentaDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("LogTransferencia");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Cuenta", b =>
                {
                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.Usuario", null)
                        .WithMany("Cuentas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Movimiento", b =>
                {
                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.MovimientoCuenta", "MovimientaCuenta")
                        .WithMany()
                        .HasForeignKey("MovimientaCuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.MovimientoUsuario", "MovimientoUsuario")
                        .WithMany()
                        .HasForeignKey("MovimientoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovimientaCuenta");

                    b.Navigation("MovimientoUsuario");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.MovimientoCuenta", b =>
                {
                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.Cuenta", "CuentaDestino")
                        .WithMany()
                        .HasForeignKey("CuentaDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.Cuenta", "CuentaOrigen")
                        .WithMany()
                        .HasForeignKey("CuentaOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CuentaDestino");

                    b.Navigation("CuentaOrigen");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.MovimientoUsuario", b =>
                {
                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.Usuario", "UsuarioDestino")
                        .WithMany()
                        .HasForeignKey("UsuarioDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.Usuario", "UsuarioOrigen")
                        .WithMany()
                        .HasForeignKey("UsuarioOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioDestino");

                    b.Navigation("UsuarioOrigen");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Rol", b =>
                {
                    b.HasOne("SistemaCompraVentaDeCriptomonedas.Entities.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaCompraVentaDeCriptomonedas.Entities.Usuario", b =>
                {
                    b.Navigation("Cuentas");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
